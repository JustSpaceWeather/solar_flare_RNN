from config.Enum import *
import matplotlib.pyplot as plt
import numpy as np

"""
蓝色条代表平均个人TSS分数，红色折线代表特征的平均累积TSS分数。
"""

all_title_list = [
    'NN', 'LSTM', 'LSTM_Att', 'BLSTM', 'BLSTM_Att', 'GRU', 'GRU_Att', 'BGRU', 'BGRU_Att'
]

M_TSS_desc_NN = [0.67,0.685714285714285 ,0.679285714285714 ,0.665000000000000 ,0.692142857142857 ,0.672857142857142 ,0.667142857142857 ,0.671428571428571 ,0.677142857142857 ,0.663571428571428
]
M_TSS_desc_LSTM = [0.757142857,0.753571428571428 ,0.750714285714285 ,0.718571428571428 ,0.718571428571428 ,0.735000000000000 ,0.722857142857142 ,0.723571428571428 ,0.725000000000000 ,0.734285714285714
]
M_TSS_desc_LSTM_Att = [0.746428571,0.7485714285714280 ,0.7450000000000000 ,0.7014285714285710 ,0.7214285714285710 ,0.7200000000000000 ,0.7085714285714280 ,0.7221428571428570 ,0.7392857142857140 ,0.7292857142857140
]
M_TSS_desc_BLSTM = [0.761428571,0.7657142857142850 ,0.7400000000000000 ,0.7278571428571430 ,0.7157142857142850 ,0.7292857142857140 ,0.7142857142857140 ,0.7257142857142850 ,0.7364285714285710 ,0.7264285714285710
]
M_TSS_desc_BLSTM_Att = [0.758571429,0.7535714285714280 ,0.7535714285714280 ,0.7078571428571420 ,0.7150000000000000 ,0.7164285714285710 ,0.7135714285714280 ,0.7178571428571420 ,0.7285714285714280 ,0.7300000000000000
]
M_TSS_desc_GRU = [0.757142857,0.7507142857142850 ,0.7514285714285710 ,0.7257142857142850 ,0.7350000000000000 ,0.7357142857142850 ,0.7185714285714280 ,0.7192857142857140 ,0.7235714285714280 ,0.7228571428571420
]
M_TSS_desc_GRU_Att = [0.745,0.7464285714285710 ,0.7435714285714280 ,0.7007142857142850 ,0.7028571428571420 ,0.6978571428571420 ,0.6799999999999990 ,0.6907142857142850 ,0.6971428571428570 ,0.7092857142857140
]
M_TSS_desc_BGRU = [0.759285714,0.7564285714285710 ,0.7507142857142850 ,0.7264285714285710 ,0.7292857142857140 ,0.7307142857142850 ,0.7264285714285710 ,0.7257142857142850 ,0.7285714285714280 ,0.7292857142857140
]
M_TSS_desc_BGRU_Att = [0.758571429,0.7514285714285710 ,0.7328571428571420 ,0.7114285714285710 ,0.6921428571428570 ,0.6971428571428570 ,0.6821428571428570 ,0.7035714285714280 ,0.7035714285714280 ,0.7235714285714280
]
M_std_desc_NN = [0.049877401,0.0501019369050004 ,0.0382593192595487 ,0.0746727554611671 ,0.0682470003826138 ,0.0602545620256089 ,0.0646181878737065 ,0.0582044251070381 ,0.0474664220738175 ,0.0503508101387917
]
M_std_desc_LSTM = [0.024117061,0.0300085021965714 ,0.0448864781238999 ,0.0462027475108463 ,0.0403049599419025 ,0.0369016895802556 ,0.0394864998888150 ,0.0432187128783024 ,0.0478358161435806 ,0.0407581217648203
]
M_std_desc_LSTM_Att = [0.043005695,0.0306061218366122 ,0.0389989534134819 ,0.0527605294646268 ,0.0303045763365663 ,0.0436591622569603 ,0.0438922614163920 ,0.0440836403548841 ,0.0365962527355699 ,0.0363444406663101
]
M_std_desc_BLSTM = [0.025793529,0.0334724986110285 ,0.0465328499282923 ,0.0332660886348429 ,0.0443547848464572 ,0.0456752065107090 ,0.0508097692679392 ,0.0338363408066485 ,0.0446585686638302 ,0.0332046837119127
]
M_std_desc_BLSTM_Att = [0.031102202,0.0303466368374971 ,0.0354634045351611 ,0.0375866346197796 ,0.0357785136753377 ,0.0450679758695638 ,0.0468878383779322 ,0.0413114106883464 ,0.0314610222079217 ,0.0330120571665467
]
M_std_desc_GRU = [0.03380617,0.0298721766661806 ,0.0327014946921702 ,0.0468606270481620 ,0.0521428571428571 ,0.0567845911838622 ,0.0397953950776688 ,0.0503102618655437 ,0.0598510054814691 ,0.0393570780398740
]
M_std_desc_GRU_Att = [0.025364687,0.0228683008479744 ,0.0412124906764332 ,0.0491198035627262 ,0.0448580527660216 ,0.0402859675777245 ,0.0340767441196473 ,0.0448409889020557 ,0.0396669810768994 ,0.0438049945898913
]
M_std_desc_BGRU = [0.043688368,0.0307142857142857 ,0.0432659077740223 ,0.0479210660506271 ,0.0531123184143465 ,0.0478144799176559 ,0.0494923205752000 ,0.0482552735830129 ,0.0434483037878444 ,0.0375866346197796
]
M_std_desc_BGRU_Att = [0.033166248,0.0346704602843188 ,0.0378234351282106 ,0.0400509879110748 ,0.0585060610849292 ,0.0421610130382106 ,0.0447498717362202 ,0.0458758306380897 ,0.0441761317030463 ,0.0423842962832765
]

all_name_list = [
    feature_M_desc['NN'],
    feature_M_desc['LSTM'],
    feature_M_desc['LSTM_Att2'],
    feature_M_desc['BLSTM'],
    feature_M_desc['BLSTM_Att2'],
    feature_M_desc['GRU'],
    feature_M_desc['GRU_Att2'],
    feature_M_desc['BGRU'],
    feature_M_desc['BGRU_Att2']
]

M_TSS_All_desc = [
    M_TSS_desc_NN,
    M_TSS_desc_LSTM,
    M_TSS_desc_LSTM_Att,
    M_TSS_desc_BLSTM,
    M_TSS_desc_BLSTM_Att,
    M_TSS_desc_GRU,
    M_TSS_desc_GRU_Att,
    M_TSS_desc_BGRU,
    M_TSS_desc_BGRU_Att,
]

M_std_All_desc = [
    M_std_desc_NN,
    M_std_desc_LSTM,
    M_std_desc_LSTM_Att,
    M_std_desc_BLSTM,
    M_std_desc_BLSTM_Att,
    M_std_desc_GRU,
    M_std_desc_GRU_Att,
    M_std_desc_BGRU,
    M_std_desc_BGRU_Att,
]

for i in range(len(M_std_All_desc)):
    plt.figure(dpi=400)
    # 设置x轴坐标名称
    names = [""]  # x轴坐标名称
    names = names + all_name_list[i]
    name_range = range(len(names))  # x轴坐标名称对于的range索引
    x = np.array([i for i in range(1, 11)])  # x轴坐标画图位置
    y = np.array(M_TSS_All_desc[i])  # 个人TSS分数
    x_err = np.array(M_std_All_desc[i])  # 个人TSS分数标准差

    # 开始画图
    plt.title(all_title_list[i]+'≥M')
    plt.ylim((0.4, 0.85))
    plt.xlim((0, 11))
    plt.xticks(name_range, names, rotation=90)  #
    # plt.bar(x, y, yerr=x_err, ecolor='black')
    plt.errorbar(x, y, yerr=x_err, ecolor='black', color='red', linestyle='--')
    plt.tight_layout()  # 调整画布大小，防止显示不全
    plt.savefig('D:/M_cut_desc/'+str(i)+'_M_cut_desc_' + all_title_list[i] + '.jpg')
    plt.show()

# 调整子图形之间的纵向距离
# figure.subplots_adjust(hspace=0.1)
